- content_for(:head){ "#{@club.name} -" }
= render :file => "layouts/photoswipe.template"
%section
  - if @photos.empty? then
    .jumbotron.jumbotron-fluid{ :style => "background: url(#{@jumboPhoto[:url]}); height:70vh; background-size:cover"}
      .container
  - else
    %a{ href:'#gallery-1', 'data-toggle':'photo-swipe-gallery'}
      .jumbotron.jumbotron-fluid{ :style => "background: url(#{@jumboPhoto[:url]}); height:70vh; background-size:cover"}
        .container
.container
  .row
    .col-12
      %h1 #{ @club.name }
      #desc-parent
        #desc-summary
          = @desc_array.first.html_safe
          %br
        - if @desc_array.length > 1 then
          #desc-therest.collapse
            = @club.description.split(/\n/)[1..-1].join('<br />').html_safe
          %button.btn.btn-outline-dark.btn-small.btn-block{ :type => 'button',data:{toggle:'collapse', target:'#desc-therest'}} Show More/Less
          %br
    .col-12.col-md-8.order-2.order-md-1
      = react_component "ReviewList", {reviews_path:golf_club_reviews_path(@club), showHeader:true}
    .col-12.col-md-4.order-1.order-md-2.mb-2
      .card
        %ul.list-group.list-group-flush
          %li.list-group-item.text-center
            %h4 Availability
        = react_component "GolfSchedule", {crsfToken:form_authenticity_token,
          club: @result[:club],
          queryDate: @date,
          paths: { reserve: reserve_golf_club_user_reservations_path(params[:id]),
            golfClub:golf_club_path(params[:id]) },
          flights: @result[:flights], queryData: @result[:queryData], insurance_modes:ChargeSchedule.insurance_modes.map{ |k,v| k},
          options: {GolfClubTimesShowPrices:true, displayCourseGroup:@result[:club][:course_user_selection] != CourseGlobalSetting.user_selections["user_auto_select"]} }
.container
  .row
    .col-12
      %h2 Location
#map{ :style => "height:70vh; margin-bottom:10px;"}
.container
  .row
    - if !@photos.empty? then
      .col-12
        .grid#gallery-1.photo-swipe-gallery
          .grid-sizer
          - @photos.each_with_index do |photo, index|
            - if index == 0 then
              .grid-item.grid-item--width3
                %a{ href: photo.avatar.url, data:{index:index, size:photo.size, title:photo.caption}}
                  %img{ :src => photo.avatar.thumb400.url, data:{index:index} }
            - elsif index < 13 then
              .grid-item{ :class => index == 0 ? "grid-item--width2" : ""}
                %a{ href: photo.avatar.url, data:{index:index, size:photo.size, title:photo.caption}}
                  %img{ :src => photo.avatar.thumb200.url , data:{index:index}}
            - else
              %a.d-none{ href: photo.avatar.url, data:{index:index, size:photo.size, title:photo.caption}}

    .col-12
      %h2 Ammenities
      .card
        .card-body
          %p.card-text Ammenities list here
          %ul
            - @club.amenity_listings.each do |amenity|
              %ul{ :class => amenity[:available] ? "" : "text-muted"} #{amenity[:label]}
= javascript_include_tag "https://maps.googleapis.com/maps/api/js?key=#{ENV['GOOGLE_MAPS_ID']}&libraries=places"
- content_for(:other_js) do
  :javascript
    var map;
    var initMap = function(){
        map = new google.maps.Map(document.getElementById('map'), {
          center: {lat: #{@club.lat} , lng: #{@club.lng} },
          scrollwheel:false,
          zoom: 16
        });

        var golfCircle = new google.maps.Circle({
          strokeColor: '#FF0000',
          strokeOpacity: 0.8,
          strokeWeight: 2,
          fillColor: '#FF0000',
          fillOpacity: 0.35,
          map: map,
          center: {lat:#{@club.lat}, lng:#{@club.lng} },
          radius: 300
        });
    };
    initMap();

    var $grid = $('.grid').masonry({
      itemSelector: '.grid-item',
      percentPosition: true,
      columnWidth: '.grid-sizer'
    });

    // layout Isotope after each image loads
    $grid.imagesLoaded().progress( function() {
      $grid.masonry();
    });
